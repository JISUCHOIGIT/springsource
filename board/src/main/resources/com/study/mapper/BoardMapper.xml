<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.study.mapper.BoardMapper">

	<!-- 페이지 나누기 개념 없을 때 -->
	<!--<select id="list" resultType="com.study.dto.BoardDTO">
		select bno,title,writer,regdate,updatedate from spring_board where bno > 0 order by bno desc
	</select>  -->	
	
	
	<select id="list" resultType="com.study.dto.BoardDTO">
	<![CDATA[
		select bno,title,writer,regdate,updatedate
		from(select /*+INDEX_DESC(spring_board pk_spring_board)*/ rownum rn, bno, title, writer, regdate, updatedate
			from spring_board
			where 
		]]>	
			<include refid="criteria"></include>
		<![CDATA[	
			bno > 0 and rownum <= (#{pageNum} * #{amount}))
		where rn > (#{pageNum} - 1) * #{amount}
		
	]]>
	</select>
	
	<select id="totalCnt" resultType="int">
		select count(*) from spring_board where
		
		<include refid="criteria"></include>	
		
		 bno > 0
	</select>
	
	<!-- 동적 sql -->
	<sql id="criteria">
	<!-- "(" suffix=") AND" : +(+ and를 쓰고 괄호를 닫아줘 +) 를 뜻함-->
	<!-- prefixOverrides="OR" 맨 처음 where or 되는거 막아줘-->
		<trim prefix="(" suffix=") AND" prefixOverrides="OR">
		<!-- typeArr 배열형태를 받아서 반복 루프를 돌면서 -->
			<foreach collection="typeArr" item="type">
				<trim prefix="OR">
				<!-- type 태그를 만들면서 or를 붙여줘라 -->
					<choose>
						<when test="type=='T'.toString()">
							title like '%'||#{keyword}||'%'
						</when>
						<when test="type=='C'.toString()">
							title like '%'||#{keyword}||'%'
						</when>
						<when test="type=='W'.toString()">
							title like '%'||#{keyword}||'%'
						</when>
					</choose>
				</trim>
			</foreach>
		</trim>
	</sql>

	<insert id = "register">
		<!-- selectKey : 주로 pk 값을 미리 실행 한 후 특정 이름으로 보관 
			-keyProperty : 결과값이 세팅될 대상 프로퍼티
		-->
		<!-- bno 발행 -->
		<!-- order : 순서 , before : 키를 미리 먼저 조회 요청 -->
		<selectKey keyProperty="bno" order="BEFORE" resultType="int">
			select seq_board.nextval from dual
		</selectKey>
		insert into spring_board(bno,title,content,writer) values(#{bno},#{title},#{content},#{writer})
	</insert>
	
	<select id="read" resultType="com.study.dto.BoardDTO">
		select bno, title, content, writer from spring_board where bno = #{bno}
	</select>
	
	<update id="modify">
		update spring_board set title = #{title}, content = #{content} where bno = #{bno}
	</update>
	
	<!-- bno가 일치하면 content,title 수정, updatedate 수정날짜 -->
	<update id="modifyUpdate">
		update spring_board set content = #{content}, title =#{title}, updatedate = sysdate where bno = #{bno}
	</update>
	
	<delete id="delete">
		delete from spring_board where bno = #{bno}
	</delete>
	
</mapper>